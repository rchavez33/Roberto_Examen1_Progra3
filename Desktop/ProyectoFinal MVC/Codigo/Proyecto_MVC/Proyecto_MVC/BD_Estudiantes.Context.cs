//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Proyecto_MVC
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BDEstudiantesEntities : DbContext
    {
        public BDEstudiantesEntities()
            : base("name=BDEstudiantesEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Estudiantes> Estudiantes { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
        public virtual DbSet<Direcciones> Direcciones { get; set; }
        public virtual DbSet<Telefonos> Telefonos { get; set; }
    
        public virtual int ActualizarDato(string tabla, string set, string condicion, Nullable<int> iDUsuario)
        {
            var tablaParameter = tabla != null ?
                new ObjectParameter("Tabla", tabla) :
                new ObjectParameter("Tabla", typeof(string));
    
            var setParameter = set != null ?
                new ObjectParameter("Set", set) :
                new ObjectParameter("Set", typeof(string));
    
            var condicionParameter = condicion != null ?
                new ObjectParameter("Condicion", condicion) :
                new ObjectParameter("Condicion", typeof(string));
    
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarDato", tablaParameter, setParameter, condicionParameter, iDUsuarioParameter);
        }
    
        public virtual int ConsultarDato(string tabla, Nullable<int> iDUsuario)
        {
            var tablaParameter = tabla != null ?
                new ObjectParameter("Tabla", tabla) :
                new ObjectParameter("Tabla", typeof(string));
    
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ConsultarDato", tablaParameter, iDUsuarioParameter);
        }
    
        public virtual int CrearDato(string tabla, string datos, Nullable<int> iDUsuario)
        {
            var tablaParameter = tabla != null ?
                new ObjectParameter("Tabla", tabla) :
                new ObjectParameter("Tabla", typeof(string));
    
            var datosParameter = datos != null ?
                new ObjectParameter("Datos", datos) :
                new ObjectParameter("Datos", typeof(string));
    
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CrearDato", tablaParameter, datosParameter, iDUsuarioParameter);
        }
    
        public virtual int EliminarDato(string tabla, string condicion, Nullable<int> iDUsuario)
        {
            var tablaParameter = tabla != null ?
                new ObjectParameter("Tabla", tabla) :
                new ObjectParameter("Tabla", typeof(string));
    
            var condicionParameter = condicion != null ?
                new ObjectParameter("Condicion", condicion) :
                new ObjectParameter("Condicion", typeof(string));
    
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarDato", tablaParameter, condicionParameter, iDUsuarioParameter);
        }
    
        public virtual int VerificarRol(Nullable<int> iD, ObjectParameter rol)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VerificarRol", iDParameter, rol);
        }
    }
}
